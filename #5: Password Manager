#Project 5:

from cryptography.fernet import Fernet #encryptes text

'''
def write_key():
    key = Fernet.generate_key()
    with open("key.key", "wb") as key_file: #wb = write bytes mode
        key_file.write(key) '''

def load_key():
    file = open("key.key", "rb") #rb = read bytes
    key = file.read()
    file.close()
    return key

key = load_key()
fer = Fernet(key)

def view(): #defines the view function
    with open('passwords.txt', 'r') as f: #with automatically closes file when done with indentation ('w' = write, 'r' = read, 'a' = append)
        for line in f.readlines(): #loops through file and read lines
            data = line.rstrip() #rstrip() removes \n from reading file
            user, passw = data.split("|")    #.split("|") looks for "|" and splits string in half: "hello|yes" --> ["hello", "yes"]
            print("User:", user, "| Password:", fer.decrypt(passw.encode()).decode())
def add():
    name = input('Account name: ')
    pwd = input("Password: ")

    with open('passwords.txt', 'a') as f:
        f.write(name + "|" + fer.encrypt(pwd.encode()).decode() + "\n") #| = pipe, it seperates name & password
        
        
while True:
    mode = input("Would you like to add a new password or view existing ones (view, add), press q to quit? ").lower()
    if mode == "q":
        break

    if mode == "view":
        view()
    elif mode == "add":
        add()
    else:
        print("Invalid mode.")
        continue
